<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Esquema de Microsoft ResX 
    
    Versión 2.0
    
    El objetivo principal de este formato es permitir un formato XML simple 
    que sea en su mayoría legible para el ojo humano. La generación y el análisis de los 
    distintos tipos de datos se realizan a través de las clases TypeConverter 
    asociadas a dichos tipos de datos.
    
    Ejemplo:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>esto es un comentario</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>Esto es un comentario</comment>
    </data>
                
    Hay varias filas de "resheader" que contienen pares de 
    nombre/valor simples.
    
    Cada fila de datos contiene un nombre y un valor. La fila también contiene un 
    tipo o tipo MIME. El tipo corresponde a una clase .NET que admite 
    la conversión de texto a valor a través de la arquitectura TypeConverter. 
    Las clases que no lo admiten se serializan y almacenan con el 
    tipo MIME definido.
    
    El tipo MIME se utiliza para serializar objetos e indica a 
    ResXResourceReader cómo se anula la persistencia del objeto. En la actualidad, esto no es 
    extensible. Para un tipo MIME dado, el valor se debe establecer en consecuencia:
    
    Tenga en cuenta que - application/x-microsoft.net.object.binary.base64 es el formato 
    que ResXResourceWriter generará; sin embargo, el lector puede 
    leer todos los formatos que aparecen a continuación.
    
    tipo MIME: application/x-microsoft.net.object.binary.base64
    value   : El objeto se debe serializar con 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : y, a continuación, codificar con base64 encoding.
    
    tipo MIME: application/x-microsoft.net.object.soap.base64
    value   : El objeto se debe serializar con 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : y, a continuación, codificar con base64 encoding.

    tipo MIME: application/x-microsoft.net.object.bytearray.base64
    value   : El objeto se debe serializar en una matriz de bytes 
            : utilizando System.ComponentModel.TypeConverter
            : y, a continuación, codificar con base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>